{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"fbjs/lib/shallowEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], \"fbjs/lib/invariant\");\n\n  var shallowEqual = _$$_REQUIRE(_dependencyMap[2], \"fbjs/lib/shallowEqual\");\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return shallowEqual(one, two);\n  }\n\n  function NavigationScenesReducer(scenes, nextState, prevState) {\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    nextState.routes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route\n      };\n      invariant(!nextKeys.has(key), \"navigationState.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      prevState.routes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        staleScenes.set(key, {\n          index: index,\n          isActive: false,\n          isStale: true,\n          key: key,\n          route: route\n        });\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    invariant(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n\n  module.exports = NavigationScenesReducer;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"invariant"],[10,15,13,15],[10,18,13,18,"require"],[10,29,13,25],[10,70,13,0],[12,0,14,0],[12,6,14,6,"shallowEqual"],[12,18,14,18],[12,21,14,21,"require"],[12,32,14,28],[12,76,14,0],[14,0,22,0],[14,6,22,6,"SCENE_KEY_PREFIX"],[14,22,22,22],[14,25,22,25],[14,33,22,0],[16,0,27,0],[16,11,27,9,"compareKey"],[16,21,27,0],[16,22,27,20,"one"],[16,25,27,0],[16,27,27,33,"two"],[16,30,27,0],[16,32,27,54],[17,0,28,2],[17,8,28,8,"delta"],[17,13,28,13],[17,16,28,16,"one"],[17,19,28,19],[17,20,28,20,"length"],[17,26,28,16],[17,29,28,29,"two"],[17,32,28,32],[17,33,28,33,"length"],[17,39,28,2],[19,0,29,2],[19,8,29,6,"delta"],[19,13,29,11],[19,16,29,14],[19,17,29,2],[19,19,29,17],[20,0,30,4],[20,13,30,11],[20,14,30,4],[21,0,31,3],[23,0,32,2],[23,8,32,6,"delta"],[23,13,32,11],[23,16,32,14],[23,17,32,2],[23,19,32,17],[24,0,33,4],[24,13,33,11],[24,14,33,12],[24,15,33,4],[25,0,34,3],[27,0,35,2],[27,11,35,9,"one"],[27,14,35,12],[27,17,35,15,"two"],[27,20,35,9],[27,23,35,21],[27,24,35,9],[27,27,35,25],[27,28,35,26],[27,29,35,2],[28,0,36,1],[30,0,41,0],[30,11,41,9,"compareScenes"],[30,24,41,0],[30,25,42,2,"one"],[30,28,41,0],[30,30,43,2,"two"],[30,33,41,0],[30,35,44,10],[31,0,45,2],[31,8,45,6,"one"],[31,11,45,9],[31,12,45,10,"index"],[31,17,45,6],[31,20,45,18,"two"],[31,23,45,21],[31,24,45,22,"index"],[31,29,45,2],[31,31,45,29],[32,0,46,4],[32,13,46,11],[32,14,46,4],[33,0,47,3],[35,0,48,2],[35,8,48,6,"one"],[35,11,48,9],[35,12,48,10,"index"],[35,17,48,6],[35,20,48,18,"two"],[35,23,48,21],[35,24,48,22,"index"],[35,29,48,2],[35,31,48,29],[36,0,49,4],[36,13,49,11],[36,14,49,12],[36,15,49,4],[37,0,50,3],[39,0,52,2],[39,11,52,9,"compareKey"],[39,21,52,19],[39,22,53,4,"one"],[39,25,53,7],[39,26,53,8,"key"],[39,29,52,19],[39,31,54,4,"two"],[39,34,54,7],[39,35,54,8,"key"],[39,38,52,19],[39,39,52,2],[40,0,56,1],[42,0,61,0],[42,11,61,9,"areScenesShallowEqual"],[42,32,61,0],[42,33,62,2,"one"],[42,36,61,0],[42,38,63,2,"two"],[42,41,61,0],[42,43,64,11],[43,0,65,2],[43,11,66,4,"one"],[43,14,66,7],[43,15,66,8,"key"],[43,18,66,4],[43,23,66,16,"two"],[43,26,66,19],[43,27,66,20,"key"],[43,30,66,4],[43,34,67,4,"one"],[43,37,67,7],[43,38,67,8,"index"],[43,43,67,4],[43,48,67,18,"two"],[43,51,67,21],[43,52,67,22,"index"],[43,57,66,4],[43,61,68,4,"one"],[43,64,68,7],[43,65,68,8,"isStale"],[43,72,68,4],[43,77,68,20,"two"],[43,80,68,23],[43,81,68,24,"isStale"],[43,88,66,4],[43,92,69,4,"one"],[43,95,69,7],[43,96,69,8,"isActive"],[43,104,69,4],[43,109,69,21,"two"],[43,112,69,24],[43,113,69,25,"isActive"],[43,121,66,4],[43,125,70,4,"areRoutesShallowEqual"],[43,146,70,25],[43,147,70,26,"one"],[43,150,70,29],[43,151,70,30,"route"],[43,156,70,25],[43,158,70,37,"two"],[43,161,70,40],[43,162,70,41,"route"],[43,167,70,25],[43,168,65,2],[44,0,72,1],[46,0,77,0],[46,11,77,9,"areRoutesShallowEqual"],[46,32,77,0],[46,33,78,2,"one"],[46,36,77,0],[46,38,79,2,"two"],[46,41,77,0],[46,43,80,11],[47,0,81,2],[47,8,81,6],[47,9,81,7,"one"],[47,12,81,6],[47,16,81,14],[47,17,81,15,"two"],[47,20,81,2],[47,22,81,20],[48,0,82,4],[48,13,82,11,"one"],[48,16,82,14],[48,21,82,19,"two"],[48,24,82,4],[49,0,83,3],[51,0,85,2],[51,8,85,6,"one"],[51,11,85,9],[51,12,85,10,"key"],[51,15,85,6],[51,20,85,18,"two"],[51,23,85,21],[51,24,85,22,"key"],[51,27,85,2],[51,29,85,27],[52,0,86,4],[52,13,86,11],[52,18,86,4],[53,0,87,3],[55,0,89,2],[55,11,89,9,"shallowEqual"],[55,23,89,21],[55,24,89,22,"one"],[55,27,89,21],[55,29,89,27,"two"],[55,32,89,21],[55,33,89,2],[56,0,90,1],[58,0,92,0],[58,11,92,9,"NavigationScenesReducer"],[58,34,92,0],[58,35,93,2,"scenes"],[58,41,92,0],[58,43,94,2,"nextState"],[58,52,92,0],[58,54,95,2,"prevState"],[58,63,92,0],[58,65,96,26],[59,0,97,2],[59,8,97,6,"prevState"],[59,17,97,15],[59,22,97,20,"nextState"],[59,31,97,2],[59,33,97,31],[60,0,98,4],[60,13,98,11,"scenes"],[60,19,98,4],[61,0,99,3],[63,0,101,2],[63,8,101,8,"prevScenes"],[63,18,101,48],[63,21,101,51],[63,25,101,55,"Map"],[63,28,101,51],[63,30,101,2],[64,0,102,2],[64,8,102,8,"freshScenes"],[64,19,102,49],[64,22,102,52],[64,26,102,56,"Map"],[64,29,102,52],[64,31,102,2],[65,0,103,2],[65,8,103,8,"staleScenes"],[65,19,103,49],[65,22,103,52],[65,26,103,56,"Map"],[65,29,103,52],[65,31,103,2],[66,0,106,2,"scenes"],[66,4,106,2,"scenes"],[66,10,106,8],[66,11,106,9,"forEach"],[66,18,106,2],[66,19,106,17],[66,29,106,17,"scene"],[66,34,106,22],[66,36,106,26],[67,0,106,26],[67,10,107,11,"key"],[67,13,106,26],[67,16,107,18,"scene"],[67,21,106,26],[67,22,107,11,"key"],[67,25,106,26],[69,0,108,4],[69,10,108,8,"scene"],[69,15,108,13],[69,16,108,14,"isStale"],[69,23,108,4],[69,25,108,23],[70,0,109,6,"staleScenes"],[70,8,109,6,"staleScenes"],[70,19,109,17],[70,20,109,18,"set"],[70,23,109,6],[70,24,109,22,"key"],[70,27,109,6],[70,29,109,27,"scene"],[70,34,109,6],[71,0,110,5],[73,0,111,4,"prevScenes"],[73,6,111,4,"prevScenes"],[73,16,111,14],[73,17,111,15,"set"],[73,20,111,4],[73,21,111,19,"key"],[73,24,111,4],[73,26,111,24,"scene"],[73,31,111,4],[74,0,112,3],[74,5,106,2],[75,0,114,2],[75,8,114,8,"nextKeys"],[75,16,114,16],[75,19,114,19],[75,23,114,23,"Set"],[75,26,114,19],[75,28,114,2],[76,0,115,2,"nextState"],[76,4,115,2,"nextState"],[76,13,115,11],[76,14,115,12,"routes"],[76,20,115,2],[76,21,115,19,"forEach"],[76,28,115,2],[76,29,115,27],[76,39,115,28,"route"],[76,44,115,27],[76,46,115,35,"index"],[76,51,115,27],[76,53,115,45],[77,0,116,4],[77,10,116,10,"key"],[77,13,116,13],[77,16,116,16,"SCENE_KEY_PREFIX"],[77,32,116,32],[77,35,116,35,"route"],[77,40,116,40],[77,41,116,41,"key"],[77,44,116,4],[78,0,117,4],[78,10,117,10,"scene"],[78,15,117,15],[78,18,117,18],[79,0,118,6,"index"],[79,8,118,6,"index"],[79,13,118,11],[79,15,118,6,"index"],[79,20,117,18],[80,0,119,6,"isActive"],[80,8,119,6,"isActive"],[80,16,119,14],[80,18,119,16],[80,23,117,18],[81,0,120,6,"isStale"],[81,8,120,6,"isStale"],[81,15,120,13],[81,17,120,15],[81,22,117,18],[82,0,121,6,"key"],[82,8,121,6,"key"],[82,11,121,9],[82,13,121,6,"key"],[82,16,117,18],[83,0,122,6,"route"],[83,8,122,6,"route"],[83,13,122,11],[83,15,122,6,"route"],[84,0,117,18],[84,7,117,4],[85,0,124,4,"invariant"],[85,6,124,4,"invariant"],[85,15,124,13],[85,16,125,6],[85,17,125,7,"nextKeys"],[85,25,125,15],[85,26,125,16,"has"],[85,29,125,7],[85,30,125,20,"key"],[85,33,125,7],[85,34,124,13],[85,36,126,6],[85,64,126,32,"index"],[85,69,126,6],[85,85,126,47,"key"],[85,88,126,6],[85,114,127,8],[85,130,124,13],[85,131,124,4],[86,0,129,4,"nextKeys"],[86,6,129,4,"nextKeys"],[86,14,129,12],[86,15,129,13,"add"],[86,18,129,4],[86,19,129,17,"key"],[86,22,129,4],[88,0,131,4],[88,10,131,8,"staleScenes"],[88,21,131,19],[88,22,131,20,"has"],[88,25,131,8],[88,26,131,24,"key"],[88,29,131,8],[88,30,131,4],[88,32,131,30],[89,0,134,6,"staleScenes"],[89,8,134,6,"staleScenes"],[89,19,134,17],[89,20,134,18,"delete"],[89,26,134,6],[89,27,134,25,"key"],[89,30,134,6],[90,0,135,5],[92,0,136,4,"freshScenes"],[92,6,136,4,"freshScenes"],[92,17,136,15],[92,18,136,16,"set"],[92,21,136,4],[92,22,136,20,"key"],[92,25,136,4],[92,27,136,25,"scene"],[92,32,136,4],[93,0,137,3],[93,5,115,2],[95,0,139,2],[95,8,139,6,"prevState"],[95,17,139,2],[95,19,139,17],[96,0,141,4,"prevState"],[96,6,141,4,"prevState"],[96,15,141,13],[96,16,141,14,"routes"],[96,22,141,4],[96,23,141,21,"forEach"],[96,30,141,4],[96,31,141,29],[96,41,141,30,"route"],[96,46,141,29],[96,48,141,54,"index"],[96,53,141,29],[96,55,141,64],[97,0,142,6],[97,12,142,12,"key"],[97,15,142,15],[97,18,142,18,"SCENE_KEY_PREFIX"],[97,34,142,34],[97,37,142,37,"route"],[97,42,142,42],[97,43,142,43,"key"],[97,46,142,6],[99,0,143,6],[99,12,143,10,"freshScenes"],[99,23,143,21],[99,24,143,22,"has"],[99,27,143,10],[99,28,143,26,"key"],[99,31,143,10],[99,32,143,6],[99,34,143,32],[100,0,144,8],[101,0,145,7],[103,0,146,6,"staleScenes"],[103,8,146,6,"staleScenes"],[103,19,146,17],[103,20,146,18,"set"],[103,23,146,6],[103,24,146,22,"key"],[103,27,146,6],[103,29,146,27],[104,0,147,8,"index"],[104,10,147,8,"index"],[104,15,147,13],[104,17,147,8,"index"],[104,22,146,27],[105,0,148,8,"isActive"],[105,10,148,8,"isActive"],[105,18,148,16],[105,20,148,18],[105,25,146,27],[106,0,149,8,"isStale"],[106,10,149,8,"isStale"],[106,17,149,15],[106,19,149,17],[106,23,146,27],[107,0,150,8,"key"],[107,10,150,8,"key"],[107,13,150,11],[107,15,150,8,"key"],[107,18,146,27],[108,0,151,8,"route"],[108,10,151,8,"route"],[108,15,151,13],[108,17,151,8,"route"],[109,0,146,27],[109,9,146,6],[110,0,153,5],[110,7,141,4],[111,0,154,3],[113,0,156,2],[113,8,156,8,"nextScenes"],[113,18,156,18],[113,21,156,21],[113,23,156,2],[115,0,158,2],[115,8,158,8,"mergeScene"],[115,18,158,18],[115,21,158,22],[115,30,158,8,"mergeScene"],[115,40,158,22],[115,41,158,22,"nextScene"],[115,50,158,31],[115,52,158,35],[116,0,158,35],[116,10,159,11,"key"],[116,13,158,35],[116,16,159,18,"nextScene"],[116,25,158,35],[116,26,159,11,"key"],[116,29,158,35],[117,0,160,4],[117,10,160,10,"prevScene"],[117,19,160,19],[117,22,160,22,"prevScenes"],[117,32,160,32],[117,33,160,33,"has"],[117,36,160,22],[117,37,160,37,"key"],[117,40,160,22],[117,44,160,44,"prevScenes"],[117,54,160,54],[117,55,160,55,"get"],[117,58,160,44],[117,59,160,59,"key"],[117,62,160,44],[117,63,160,22],[117,66,160,66],[117,70,160,4],[119,0,161,4],[119,10,161,8,"prevScene"],[119,19,161,17],[119,23,161,21,"areScenesShallowEqual"],[119,44,161,42],[119,45,161,43,"prevScene"],[119,54,161,42],[119,56,161,54,"nextScene"],[119,65,161,42],[119,66,161,4],[119,68,161,66],[120,0,164,6,"nextScenes"],[120,8,164,6,"nextScenes"],[120,18,164,16],[120,19,164,17,"push"],[120,23,164,6],[120,24,164,22,"prevScene"],[120,33,164,6],[121,0,165,5],[121,7,161,4],[121,13,165,11],[122,0,166,6,"nextScenes"],[122,8,166,6,"nextScenes"],[122,18,166,16],[122,19,166,17,"push"],[122,23,166,6],[122,24,166,22,"nextScene"],[122,33,166,6],[123,0,167,5],[124,0,168,3],[124,5,158,2],[126,0,170,2,"staleScenes"],[126,4,170,2,"staleScenes"],[126,15,170,13],[126,16,170,14,"forEach"],[126,23,170,2],[126,24,170,22,"mergeScene"],[126,34,170,2],[127,0,171,2,"freshScenes"],[127,4,171,2,"freshScenes"],[127,15,171,13],[127,16,171,14,"forEach"],[127,23,171,2],[127,24,171,22,"mergeScene"],[127,34,171,2],[128,0,173,2,"nextScenes"],[128,4,173,2,"nextScenes"],[128,14,173,12],[128,15,173,13,"sort"],[128,19,173,2],[128,20,173,18,"compareScenes"],[128,33,173,2],[129,0,175,2],[129,8,175,6,"activeScenesCount"],[129,25,175,23],[129,28,175,26],[129,29,175,2],[130,0,176,2,"nextScenes"],[130,4,176,2,"nextScenes"],[130,14,176,12],[130,15,176,13,"forEach"],[130,22,176,2],[130,23,176,21],[130,33,176,22,"scene"],[130,38,176,21],[130,40,176,29,"ii"],[130,42,176,21],[130,44,176,36],[131,0,177,4],[131,10,177,10,"isActive"],[131,18,177,18],[131,21,177,21],[131,22,177,22,"scene"],[131,27,177,27],[131,28,177,28,"isStale"],[131,35,177,21],[131,39,177,39,"scene"],[131,44,177,44],[131,45,177,45,"index"],[131,50,177,39],[131,55,177,55,"nextState"],[131,64,177,64],[131,65,177,65,"index"],[131,70,177,4],[133,0,178,4],[133,10,178,8,"isActive"],[133,18,178,16],[133,23,178,21,"scene"],[133,28,178,26],[133,29,178,27,"isActive"],[133,37,178,4],[133,39,178,37],[134,0,179,6,"nextScenes"],[134,8,179,6,"nextScenes"],[134,18,179,16],[134,19,179,17,"ii"],[134,21,179,16],[134,22,179,6],[134,43,180,11,"scene"],[134,48,179,6],[135,0,181,8,"isActive"],[135,10,181,8,"isActive"],[135,18,181,16],[135,20,181,8,"isActive"],[136,0,179,6],[137,0,183,5],[139,0,184,4],[139,10,184,8,"isActive"],[139,18,184,4],[139,20,184,18],[140,0,185,6,"activeScenesCount"],[140,8,185,6,"activeScenesCount"],[140,25,185,23],[141,0,186,5],[142,0,187,3],[142,5,176,2],[143,0,189,2,"invariant"],[143,4,189,2,"invariant"],[143,13,189,11],[143,14,190,4,"activeScenesCount"],[143,31,190,21],[143,36,190,26],[143,37,189,11],[143,39,191,4],[143,94,189,11],[143,96,192,4,"activeScenesCount"],[143,113,189,11],[143,114,189,2],[145,0,195,2],[145,8,195,6,"nextScenes"],[145,18,195,16],[145,19,195,17,"length"],[145,25,195,6],[145,30,195,28,"scenes"],[145,36,195,34],[145,37,195,35,"length"],[145,43,195,2],[145,45,195,43],[146,0,196,4],[146,13,196,11,"nextScenes"],[146,23,196,4],[147,0,197,3],[149,0,199,2],[149,8,199,6,"nextScenes"],[149,18,199,16],[149,19,199,17,"some"],[149,23,199,6],[149,24,200,4],[149,34,200,5,"scene"],[149,39,200,4],[149,41,200,12,"index"],[149,46,200,4],[150,0,200,4],[150,13,200,22],[150,14,200,23,"areScenesShallowEqual"],[150,35,200,44],[150,36,200,45,"scenes"],[150,42,200,51],[150,43,200,52,"index"],[150,48,200,51],[150,49,200,44],[150,51,200,60,"scene"],[150,56,200,44],[150,57,200,4],[151,0,200,4],[151,5,199,6],[151,6,199,2],[151,8,201,5],[152,0,202,4],[152,13,202,11,"nextScenes"],[152,23,202,4],[153,0,203,3],[155,0,206,2],[155,11,206,9,"scenes"],[155,17,206,2],[156,0,207,1],[158,0,209,0,"module"],[158,2,209,0,"module"],[158,8,209,6],[158,9,209,7,"exports"],[158,16,209,0],[158,19,209,17,"NavigationScenesReducer"],[158,42,209,0]]},"type":"js/module"}]}