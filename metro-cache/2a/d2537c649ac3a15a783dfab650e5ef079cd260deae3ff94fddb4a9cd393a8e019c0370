{"dependencies":[{"name":"./Parser.js","data":{"isAsync":false}},{"name":"stream","data":{"isAsync":false}},{"name":"readable-stream","data":{"isAsync":false}},{"name":"string_decoder","data":{"isAsync":false}},{"name":"buffer","data":{"isAsync":false}},{"name":"inherits","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = Stream;\n\n  var Parser = _$$_REQUIRE(_dependencyMap[0], \"./Parser.js\"),\n      WritableStream = _$$_REQUIRE(_dependencyMap[1], \"stream\").Writable || _$$_REQUIRE(_dependencyMap[2], \"readable-stream\").Writable,\n      StringDecoder = _$$_REQUIRE(_dependencyMap[3], \"string_decoder\").StringDecoder,\n      Buffer = _$$_REQUIRE(_dependencyMap[4], \"buffer\").Buffer;\n\n  function Stream(cbs, options) {\n    var parser = this._parser = new Parser(cbs, options);\n    var decoder = this._decoder = new StringDecoder();\n    WritableStream.call(this, {\n      decodeStrings: false\n    });\n    this.once(\"finish\", function () {\n      parser.end(decoder.end());\n    });\n  }\n\n  _$$_REQUIRE(_dependencyMap[5], \"inherits\")(Stream, WritableStream);\n\n  WritableStream.prototype._write = function (chunk, encoding, cb) {\n    if (chunk instanceof Buffer) chunk = this._decoder.write(chunk);\n\n    this._parser.write(chunk);\n\n    cb();\n  };\n});","map":[[2,0,1,0,"module"],[2,2,1,0,"module"],[2,8,1,6],[2,9,1,7,"exports"],[2,16,1,0],[2,19,1,17,"Stream"],[2,25,1,0],[4,0,3,0],[4,6,3,4,"Parser"],[4,12,3,10],[4,15,3,13,"require"],[4,26,3,20],[4,60,3,0],[5,0,3,0],[5,6,4,4,"WritableStream"],[5,20,4,18],[5,23,4,21,"require"],[5,34,4,28],[5,63,4,21],[5,64,4,39,"Writable"],[5,72,4,21],[5,76,4,51,"require"],[5,87,4,58],[5,125,4,51],[5,126,4,78,"Writable"],[5,134,3,0],[6,0,3,0],[6,6,5,4,"StringDecoder"],[6,19,5,17],[6,22,5,20,"require"],[6,33,5,27],[6,70,5,20],[6,71,5,46,"StringDecoder"],[6,84,3,0],[7,0,3,0],[7,6,6,4,"Buffer"],[7,12,6,10],[7,15,6,13,"require"],[7,26,6,20],[7,55,6,13],[7,56,6,31,"Buffer"],[7,62,3,0],[9,0,8,0],[9,11,8,9,"Stream"],[9,17,8,0],[9,18,8,16,"cbs"],[9,21,8,0],[9,23,8,21,"options"],[9,30,8,0],[9,32,8,29],[10,0,9,1],[10,8,9,5,"parser"],[10,14,9,11],[10,17,9,14],[10,22,9,19,"_parser"],[10,29,9,14],[10,32,9,29],[10,36,9,33,"Parser"],[10,42,9,29],[10,43,9,40,"cbs"],[10,46,9,29],[10,48,9,45,"options"],[10,55,9,29],[10,56,9,1],[11,0,10,1],[11,8,10,5,"decoder"],[11,15,10,12],[11,18,10,15],[11,23,10,20,"_decoder"],[11,31,10,15],[11,34,10,31],[11,38,10,35,"StringDecoder"],[11,51,10,31],[11,53,10,1],[12,0,12,1,"WritableStream"],[12,4,12,1,"WritableStream"],[12,18,12,15],[12,19,12,16,"call"],[12,23,12,1],[12,24,12,21],[12,28,12,1],[12,30,12,27],[13,0,12,28,"decodeStrings"],[13,6,12,28,"decodeStrings"],[13,19,12,41],[13,21,12,43],[14,0,12,27],[14,5,12,1],[15,0,14,1],[15,9,14,6,"once"],[15,13,14,1],[15,14,14,11],[15,22,14,1],[15,24,14,21],[15,36,14,31],[16,0,15,2,"parser"],[16,6,15,2,"parser"],[16,12,15,8],[16,13,15,9,"end"],[16,16,15,2],[16,17,15,13,"decoder"],[16,24,15,20],[16,25,15,21,"end"],[16,28,15,13],[16,30,15,2],[17,0,16,2],[17,5,14,1],[18,0,17,1],[20,0,19,0,"require"],[20,2,19,0,"require"],[20,13,19,7],[20,44,19,0],[20,45,19,20,"Stream"],[20,51,19,0],[20,53,19,28,"WritableStream"],[20,67,19,0],[22,0,21,0,"WritableStream"],[22,2,21,0,"WritableStream"],[22,16,21,14],[22,17,21,15,"prototype"],[22,26,21,0],[22,27,21,25,"_write"],[22,33,21,0],[22,36,21,34],[22,46,21,43,"chunk"],[22,51,21,34],[22,53,21,50,"encoding"],[22,61,21,34],[22,63,21,60,"cb"],[22,65,21,34],[22,67,21,63],[23,0,22,1],[23,8,22,4,"chunk"],[23,13,22,9],[23,25,22,21,"Buffer"],[23,31,22,1],[23,33,22,29,"chunk"],[23,38,22,34],[23,41,22,37],[23,46,22,42,"_decoder"],[23,54,22,37],[23,55,22,51,"write"],[23,60,22,37],[23,61,22,57,"chunk"],[23,66,22,37],[23,67,22,29],[25,0,23,1],[25,9,23,6,"_parser"],[25,16,23,1],[25,17,23,14,"write"],[25,22,23,1],[25,23,23,20,"chunk"],[25,28,23,1],[27,0,24,1,"cb"],[27,4,24,1,"cb"],[27,6,24,3],[28,0,25,1],[28,3,21,0]]},"type":"js/module"}]}