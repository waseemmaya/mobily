{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"htmlparser2","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseHtml = parseHtml;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _htmlparser = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"htmlparser2\"));\n\n  function decodeHtmlEntities(str) {\n    return str.replace(/&#([0-9]{1,3});/gi, function (match, numStr) {\n      var num = parseInt(numStr, 10);\n      return String.fromCharCode(num);\n    });\n  }\n\n  function createElementNode(tag) {\n    var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var childElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var parent = arguments.length > 3 ? arguments[3] : undefined;\n    return {\n      tag: tag,\n      attributes: attributes,\n      childElements: childElements,\n      parent: parent\n    };\n  }\n\n  var htmlNewLineRegex = new RegExp('(>\\\\n)|(\\\\n<)|(\\\\n)', 'g');\n  var newLineAfterClosingTagRegex = new RegExp('>\\\\n');\n  var newLineBeforeOpeningTagRegex = new RegExp('\\\\n<');\n\n  function stripNewLines(html) {\n    return html.replace(htmlNewLineRegex, function (match) {\n      if (newLineAfterClosingTagRegex.test(match)) {\n        return '>';\n      } else if (newLineBeforeOpeningTagRegex.test(match)) {\n        return '<';\n      }\n\n      return ' ';\n    }).trim();\n  }\n\n  var HtmlTree = function () {\n    function HtmlTree() {\n      var rootTag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n      (0, _classCallCheck2.default)(this, HtmlTree);\n      this.rootNode = createElementNode(rootTag);\n      this.activeNode = this.rootNode;\n      this.openTag = this.openTag.bind(this);\n      this.appendText = this.appendText.bind(this);\n      this.closeTag = this.closeTag.bind(this);\n    }\n\n    (0, _createClass2.default)(HtmlTree, [{\n      key: \"openTag\",\n      value: function openTag(tag, attributes, childElements) {\n        var element = this.addChild(tag, attributes, childElements);\n        this.activeNode = element;\n      }\n    }, {\n      key: \"addChild\",\n      value: function addChild(tag, attributes, childElements) {\n        var element = createElementNode(tag, attributes, childElements, this.activeNode);\n        this.activeNode.childElements.push(element);\n        return element;\n      }\n    }, {\n      key: \"appendText\",\n      value: function appendText(text) {\n        var trimmedText = text.trim();\n\n        if (trimmedText.length === 0) {\n          return;\n        }\n\n        this.addChild('text', undefined, [decodeHtmlEntities(text)]);\n      }\n    }, {\n      key: \"getParent\",\n      value: function getParent() {\n        return this.activeNode.parent;\n      }\n    }, {\n      key: \"closeTag\",\n      value: function closeTag() {\n        this.activeNode = this.getParent();\n      }\n    }, {\n      key: \"getRootNode\",\n      value: function getRootNode() {\n        return this.rootNode;\n      }\n    }]);\n    return HtmlTree;\n  }();\n\n  function parseHtml(html) {\n    var rootTag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';\n    var htmlTree = new HtmlTree(rootTag);\n    var parser = new _htmlparser.default.Parser({\n      onopentag: htmlTree.openTag,\n      ontext: htmlTree.appendText,\n      onclosetag: htmlTree.closeTag\n    });\n    var strippedHtml = stripNewLines(html);\n    parser.write(strippedHtml);\n    parser.end();\n    return htmlTree;\n  }\n});","map":[[13,0,1,0],[15,0,10,0],[15,11,10,9,"decodeHtmlEntities"],[15,29,10,0],[15,30,10,28,"str"],[15,33,10,0],[15,35,10,33],[16,0,11,2],[16,11,11,9,"str"],[16,14,11,12],[16,15,11,13,"replace"],[16,22,11,9],[16,23,11,21],[16,42,11,9],[16,44,11,42],[16,54,11,43,"match"],[16,59,11,42],[16,61,11,50,"numStr"],[16,67,11,42],[16,69,11,61],[17,0,12,4],[17,10,12,10,"num"],[17,13,12,13],[17,16,12,16,"parseInt"],[17,24,12,24],[17,25,12,25,"numStr"],[17,31,12,24],[17,33,12,33],[17,35,12,24],[17,36,12,4],[18,0,13,4],[18,13,13,11,"String"],[18,19,13,17],[18,20,13,18,"fromCharCode"],[18,32,13,11],[18,33,13,31,"num"],[18,36,13,11],[18,37,13,4],[19,0,14,3],[19,5,11,9],[19,6,11,2],[20,0,15,1],[22,0,17,0],[22,11,17,9,"createElementNode"],[22,28,17,0],[22,29,17,27,"tag"],[22,32,17,0],[22,34,17,77],[23,0,17,77],[23,8,17,32,"attributes"],[23,18,17,77],[23,89,17,45],[23,91,17,77],[24,0,17,77],[24,8,17,49,"childElements"],[24,21,17,77],[24,92,17,65],[24,94,17,77],[25,0,17,77],[25,8,17,69,"parent"],[25,14,17,77],[26,0,18,2],[26,11,18,9],[27,0,19,4,"tag"],[27,6,19,4,"tag"],[27,9,19,7],[27,11,19,4,"tag"],[27,14,18,9],[28,0,20,4,"attributes"],[28,6,20,4,"attributes"],[28,16,20,14],[28,18,20,4,"attributes"],[28,28,18,9],[29,0,21,4,"childElements"],[29,6,21,4,"childElements"],[29,19,21,17],[29,21,21,4,"childElements"],[29,34,18,9],[30,0,22,4,"parent"],[30,6,22,4,"parent"],[30,12,22,10],[30,14,22,4,"parent"],[31,0,18,9],[31,5,18,2],[32,0,24,1],[34,0,27,0],[34,6,27,6,"htmlNewLineRegex"],[34,22,27,22],[34,25,27,25],[34,29,27,29,"RegExp"],[34,35,27,25],[34,36,27,36],[34,57,27,25],[34,59,27,59],[34,62,27,25],[34,63,27,0],[35,0,28,0],[35,6,28,6,"newLineAfterClosingTagRegex"],[35,33,28,33],[35,36,28,36],[35,40,28,40,"RegExp"],[35,46,28,36],[35,47,28,47],[35,53,28,36],[35,54,28,0],[36,0,29,0],[36,6,29,6,"newLineBeforeOpeningTagRegex"],[36,34,29,34],[36,37,29,37],[36,41,29,41,"RegExp"],[36,47,29,37],[36,48,29,48],[36,54,29,37],[36,55,29,0],[38,0,38,0],[38,11,38,9,"stripNewLines"],[38,24,38,0],[38,25,38,23,"html"],[38,29,38,0],[38,31,38,29],[39,0,39,2],[39,11,39,9,"html"],[39,15,39,13],[39,16,39,14,"replace"],[39,23,39,9],[39,24,39,22,"htmlNewLineRegex"],[39,40,39,9],[39,42,39,40],[39,52,39,41,"match"],[39,57,39,40],[39,59,39,51],[40,0,40,6],[40,10,40,10,"newLineAfterClosingTagRegex"],[40,37,40,37],[40,38,40,38,"test"],[40,42,40,10],[40,43,40,43,"match"],[40,48,40,10],[40,49,40,6],[40,51,40,51],[41,0,41,8],[41,15,41,15],[41,18,41,8],[42,0,42,7],[42,7,40,6],[42,13,42,13],[42,17,42,17,"newLineBeforeOpeningTagRegex"],[42,45,42,45],[42,46,42,46,"test"],[42,50,42,17],[42,51,42,51,"match"],[42,56,42,17],[42,57,42,13],[42,59,42,59],[43,0,43,8],[43,15,43,15],[43,18,43,8],[44,0,44,7],[46,0,45,6],[46,13,45,13],[46,16,45,6],[47,0,46,5],[47,5,39,9],[47,7,47,4,"trim"],[47,11,39,9],[47,13,39,2],[48,0,48,1],[50,6,55,6,"HtmlTree"],[50,14],[51,0,61,2],[51,24,61,31],[52,0,61,31],[52,10,61,14,"rootTag"],[52,17,61,31],[52,88,61,24],[52,93,61,31],[53,0,61,31],[54,0,62,4],[54,11,62,9,"rootNode"],[54,19,62,4],[54,22,62,20,"createElementNode"],[54,39,62,37],[54,40,62,38,"rootTag"],[54,47,62,37],[54,48,62,4],[55,0,63,4],[55,11,63,9,"activeNode"],[55,21,63,4],[55,24,63,22],[55,29,63,27,"rootNode"],[55,37,63,4],[56,0,64,4],[56,11,64,9,"openTag"],[56,18,64,4],[56,21,64,19],[56,26,64,24,"openTag"],[56,33,64,19],[56,34,64,32,"bind"],[56,38,64,19],[56,39,64,37],[56,43,64,19],[56,44,64,4],[57,0,65,4],[57,11,65,9,"appendText"],[57,21,65,4],[57,24,65,22],[57,29,65,27,"appendText"],[57,39,65,22],[57,40,65,38,"bind"],[57,44,65,22],[57,45,65,43],[57,49,65,22],[57,50,65,4],[58,0,66,4],[58,11,66,9,"closeTag"],[58,19,66,4],[58,22,66,20],[58,27,66,25,"closeTag"],[58,35,66,20],[58,36,66,34,"bind"],[58,40,66,20],[58,41,66,39],[58,45,66,20],[58,46,66,4],[59,0,67,3],[63,30,75,10,"tag"],[63,33],[63,35,75,15,"attributes"],[63,45],[63,47,75,27,"childElements"],[63,60],[63,62,75,42],[64,0,76,4],[64,12,76,10,"element"],[64,19,76,17],[64,22,76,20],[64,27,76,25,"addChild"],[64,35,76,20],[64,36,76,34,"tag"],[64,39,76,20],[64,41,76,39,"attributes"],[64,51,76,20],[64,53,76,51,"childElements"],[64,66,76,20],[64,67,76,4],[65,0,77,4],[65,13,77,9,"activeNode"],[65,23,77,4],[65,26,77,22,"element"],[65,33,77,4],[66,0,78,3],[69,31,87,11,"tag"],[69,34],[69,36,87,16,"attributes"],[69,46],[69,48,87,28,"childElements"],[69,61],[69,63,87,43],[70,0,88,4],[70,12,88,10,"element"],[70,19,88,17],[70,22,88,20,"createElementNode"],[70,39,88,37],[70,40,88,38,"tag"],[70,43,88,37],[70,45,88,43,"attributes"],[70,55,88,37],[70,57,88,55,"childElements"],[70,70,88,37],[70,72,88,70],[70,77,88,75,"activeNode"],[70,87,88,37],[70,88,88,4],[71,0,90,4],[71,13,90,9,"activeNode"],[71,23,90,4],[71,24,90,20,"childElements"],[71,37,90,4],[71,38,90,34,"push"],[71,42,90,4],[71,43,90,39,"element"],[71,50,90,4],[72,0,92,4],[72,15,92,11,"element"],[72,22,92,4],[73,0,93,3],[76,33,99,13,"text"],[76,37],[76,39,99,19],[77,0,100,4],[77,12,100,10,"trimmedText"],[77,23,100,21],[77,26,100,24,"text"],[77,30,100,28],[77,31,100,29,"trim"],[77,35,100,24],[77,37,100,4],[79,0,101,4],[79,12,101,8,"trimmedText"],[79,23,101,19],[79,24,101,20,"length"],[79,30,101,8],[79,35,101,31],[79,36,101,4],[79,38,101,34],[80,0,103,6],[81,0,104,5],[83,0,105,4],[83,13,105,9,"addChild"],[83,21,105,4],[83,22,105,18],[83,28,105,4],[83,30,105,26,"undefined"],[83,39,105,4],[83,41,105,37],[83,42,105,38,"decodeHtmlEntities"],[83,60,105,56],[83,61,105,57,"text"],[83,65,105,56],[83,66,105,37],[83,67,105,4],[84,0,106,3],[87,34,108,14],[88,0,109,4],[88,15,109,11],[88,20,109,16,"activeNode"],[88,30,109,11],[88,31,109,27,"parent"],[88,37,109,4],[89,0,110,3],[92,33,112,13],[93,0,113,4],[93,13,113,9,"activeNode"],[93,23,113,4],[93,26,113,22],[93,31,113,27,"getParent"],[93,40,113,22],[93,42,113,4],[94,0,114,3],[97,36,116,16],[98,0,117,4],[98,15,117,11],[98,20,117,16,"rootNode"],[98,28,117,4],[99,0,118,3],[104,0,127,7],[104,11,127,16,"parseHtml"],[104,20,127,7],[104,21,127,26,"html"],[104,25,127,7],[104,27,127,49],[105,0,127,49],[105,8,127,32,"rootTag"],[105,15,127,49],[105,86,127,42],[105,91,127,49],[106,0,128,2],[106,8,128,8,"htmlTree"],[106,16,128,16],[106,19,128,19],[106,23,128,23,"HtmlTree"],[106,31,128,19],[106,32,128,32,"rootTag"],[106,39,128,19],[106,40,128,2],[107,0,130,2],[107,8,130,8,"parser"],[107,14,130,14],[107,17,130,17],[107,21,130,21,"htmlparser2"],[107,41,130,33,"Parser"],[107,47,130,17],[107,48,130,40],[108,0,131,4,"onopentag"],[108,6,131,4,"onopentag"],[108,15,131,13],[108,17,131,15,"htmlTree"],[108,25,131,23],[108,26,131,24,"openTag"],[108,33,130,40],[109,0,132,4,"ontext"],[109,6,132,4,"ontext"],[109,12,132,10],[109,14,132,12,"htmlTree"],[109,22,132,20],[109,23,132,21,"appendText"],[109,33,130,40],[110,0,133,4,"onclosetag"],[110,6,133,4,"onclosetag"],[110,16,133,14],[110,18,133,16,"htmlTree"],[110,26,133,24],[110,27,133,25,"closeTag"],[111,0,130,40],[111,5,130,17],[111,6,130,2],[112,0,137,2],[112,8,137,8,"strippedHtml"],[112,20,137,20],[112,23,137,23,"stripNewLines"],[112,36,137,36],[112,37,137,37,"html"],[112,41,137,36],[112,42,137,2],[113,0,139,2,"parser"],[113,4,139,2,"parser"],[113,10,139,8],[113,11,139,9,"write"],[113,16,139,2],[113,17,139,15,"strippedHtml"],[113,29,139,2],[114,0,140,2,"parser"],[114,4,140,2,"parser"],[114,10,140,8],[114,11,140,9,"end"],[114,14,140,2],[115,0,142,2],[115,11,142,9,"htmlTree"],[115,19,142,2],[116,0,143,1]]},"type":"js/module"}]}