{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@react-navigation/core\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DrawerActions\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _core.SwitchRouter)(routeConfigs, config);\n\n    var __id = -1;\n\n    var genId = function genId() {\n      __id++;\n      return __id;\n    };\n\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null,\n            openId: genId(),\n            closeId: genId(),\n            toggleId: genId()\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_SETTLING) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_ACTIVE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_IDLE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _core.NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              openId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              toggleId: genId()\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n            return _objectSpread({}, switchedState, {\n              closeId: genId()\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,11,4,9,"withDefaultValue"],[19,27,4,0],[19,28,4,26,"obj"],[19,31,4,0],[19,33,4,31,"key"],[19,36,4,0],[19,38,4,36,"defaultValue"],[19,50,4,0],[19,52,4,50],[20,0,5,2],[20,8,5,6,"obj"],[20,11,5,9],[20,12,5,10,"hasOwnProperty"],[20,26,5,6],[20,27,5,25,"key"],[20,30,5,6],[20,35,5,33],[20,42,5,40,"obj"],[20,45,5,43],[20,46,5,44,"key"],[20,49,5,43],[20,50,5,33],[20,55,5,53],[20,66,5,2],[20,68,5,66],[21,0,6,4],[21,13,6,11,"obj"],[21,16,6,4],[22,0,7,3],[24,0,9,2,"obj"],[24,4,9,2,"obj"],[24,7,9,5],[24,8,9,6,"key"],[24,11,9,5],[24,12,9,2],[24,15,9,13,"defaultValue"],[24,27,9,2],[25,0,10,2],[25,11,10,9,"obj"],[25,14,10,2],[26,0,11,1],[28,0,13,0],[28,6,13,6,"getActiveRouteKey"],[28,23,13,23],[28,26,13,26],[28,35,13,6,"getActiveRouteKey"],[28,52,13,26],[28,53,13,26,"route"],[28,58,13,31],[28,60,13,35],[29,0,14,2],[29,8,14,6,"route"],[29,13,14,11],[29,14,14,12,"routes"],[29,20,14,6],[29,24,14,22,"route"],[29,29,14,27],[29,30,14,28,"routes"],[29,36,14,22],[29,37,14,35,"route"],[29,42,14,40],[29,43,14,41,"index"],[29,48,14,22],[29,49,14,2],[29,51,14,49],[30,0,15,4],[30,13,15,11,"getActiveRouteKey"],[30,30,15,28],[30,31,15,29,"route"],[30,36,15,34],[30,37,15,35,"routes"],[30,43,15,29],[30,44,15,42,"route"],[30,49,15,47],[30,50,15,48,"index"],[30,55,15,29],[30,56,15,28],[30,57,15,4],[31,0,16,3],[33,0,17,2],[33,11,17,9,"route"],[33,16,17,14],[33,17,17,15,"key"],[33,20,17,2],[34,0,18,1],[34,3,13,0],[36,17,20,16],[36,35,20,17,"routeConfigs"],[36,47,20,16],[36,49,20,47],[37,0,20,47],[37,8,20,31,"config"],[37,14,20,47],[37,85,20,40],[37,87,20,47],[38,0,21,2,"config"],[38,4,21,2,"config"],[38,10,21,8],[38,31,21,16,"config"],[38,37,21,8],[38,38,21,2],[39,0,22,2,"config"],[39,4,22,2,"config"],[39,10,22,8],[39,13,22,11,"withDefaultValue"],[39,29,22,27],[39,30,22,28,"config"],[39,36,22,27],[39,38,22,36],[39,51,22,27],[39,53,22,51,"config"],[39,59,22,57],[39,60,22,58,"unmountInactiveRoutes"],[39,81,22,51],[39,84,22,82],[39,88,22,51],[39,91,22,89],[39,92,22,90],[39,93,22,91,"config"],[39,99,22,97],[39,100,22,98,"resetOnBlur"],[39,111,22,27],[39,112,22,2],[40,0,23,2,"config"],[40,4,23,2,"config"],[40,10,23,8],[40,13,23,11,"withDefaultValue"],[40,29,23,27],[40,30,23,28,"config"],[40,36,23,27],[40,38,23,36],[40,52,23,27],[40,54,23,52],[40,68,23,27],[40,69,23,2],[41,0,25,2],[41,8,25,8,"switchRouter"],[41,20,25,20],[41,23,25,23],[41,47,25,36,"routeConfigs"],[41,59,25,23],[41,61,25,50,"config"],[41,67,25,23],[41,68,25,2],[43,0,27,2],[43,8,27,6,"__id"],[43,12,27,10],[43,15,27,13],[43,16,27,14],[43,17,27,2],[45,0,28,2],[45,8,28,8,"genId"],[45,13,28,13],[45,16,28,16],[45,25,28,8,"genId"],[45,30,28,16],[45,33,28,22],[46,0,29,4,"__id"],[46,6,29,4,"__id"],[46,10,29,8],[47,0,30,4],[47,13,30,11,"__id"],[47,17,30,4],[48,0,31,3],[48,5,28,2],[50,0,33,2],[50,29,34,7,"switchRouter"],[50,41,33,2],[51,0,36,4,"getActionCreators"],[51,6,36,4,"getActionCreators"],[51,23,33,2],[51,52,36,22,"route"],[51,57,33,2],[51,59,36,29,"navStateKey"],[51,70,33,2],[51,72,36,42],[52,0,37,6],[53,0,38,8,"openDrawer"],[53,10,38,8,"openDrawer"],[53,20,38,18],[53,22,38,20],[54,0,38,20],[54,19,38,26,"DrawerActions"],[54,42,38,40,"openDrawer"],[54,52,38,26],[54,53,38,51],[55,0,38,53,"key"],[55,14,38,53,"key"],[55,17,38,56],[55,19,38,58,"navStateKey"],[56,0,38,51],[56,13,38,26],[56,14,38,20],[57,0,38,20],[57,11,37,6],[58,0,39,8,"closeDrawer"],[58,10,39,8,"closeDrawer"],[58,21,39,19],[58,23,39,21],[59,0,39,21],[59,19,39,27,"DrawerActions"],[59,42,39,41,"closeDrawer"],[59,53,39,27],[59,54,39,53],[60,0,39,55,"key"],[60,14,39,55,"key"],[60,17,39,58],[60,19,39,60,"navStateKey"],[61,0,39,53],[61,13,39,27],[61,14,39,21],[62,0,39,21],[62,11,37,6],[63,0,40,8,"toggleDrawer"],[63,10,40,8,"toggleDrawer"],[63,22,40,20],[63,24,40,22],[64,0,40,22],[64,19,40,28,"DrawerActions"],[64,42,40,42,"toggleDrawer"],[64,54,40,28],[64,55,40,55],[65,0,40,57,"key"],[65,14,40,57,"key"],[65,17,40,60],[65,19,40,62,"navStateKey"],[66,0,40,55],[66,13,40,28],[66,14,40,22],[67,0,40,22],[68,0,37,6],[68,11,41,11,"switchRouter"],[68,23,41,23],[68,24,41,24,"getActionCreators"],[68,41,41,11],[68,42,41,42,"route"],[68,47,41,11],[68,49,41,49,"navStateKey"],[68,60,41,11],[68,61,37,6],[69,0,43,5],[69,7,33,2],[70,0,45,4,"getStateForAction"],[70,6,45,4,"getStateForAction"],[70,23,33,2],[70,52,45,22,"action"],[70,58,33,2],[70,60,45,30,"state"],[70,65,33,2],[70,67,45,37],[71,0,47,6],[71,12,47,10],[71,13,47,11,"state"],[71,18,47,6],[71,20,47,18],[72,0,48,8],[72,35,49,13,"switchRouter"],[72,47,49,25],[72,48,49,26,"getStateForAction"],[72,65,49,13],[72,66,49,44,"action"],[72,72,49,13],[72,74,49,52,"undefined"],[72,83,49,13],[72,84,48,8],[73,0,50,10,"isDrawerOpen"],[73,12,50,10,"isDrawerOpen"],[73,24,50,22],[73,26,50,24],[73,31,48,8],[74,0,51,10,"isDrawerIdle"],[74,12,51,10,"isDrawerIdle"],[74,24,51,22],[74,26,51,24],[74,30,48,8],[75,0,52,10,"drawerMovementDirection"],[75,12,52,10,"drawerMovementDirection"],[75,35,52,33],[75,37,52,35],[75,41,48,8],[76,0,53,10,"openId"],[76,12,53,10,"openId"],[76,18,53,16],[76,20,53,18,"genId"],[76,25,53,23],[76,27,48,8],[77,0,54,10,"closeId"],[77,12,54,10,"closeId"],[77,19,54,17],[77,21,54,19,"genId"],[77,26,54,24],[77,28,48,8],[78,0,55,10,"toggleId"],[78,12,55,10,"toggleId"],[78,20,55,18],[78,22,55,20,"genId"],[78,27,55,25],[79,0,48,8],[80,0,57,7],[82,0,59,6],[82,12,59,12,"isRouterTargeted"],[82,28,59,28],[82,31,59,31,"action"],[82,37,59,37],[82,38,59,38,"key"],[82,41,59,31],[82,45,59,45],[82,49,59,31],[82,53,59,53,"action"],[82,59,59,59],[82,60,59,60,"key"],[82,63,59,53],[82,68,59,68,"state"],[82,73,59,73],[82,74,59,74,"key"],[82,77,59,6],[84,0,61,6],[84,12,61,10,"isRouterTargeted"],[84,28,61,6],[84,30,61,28],[85,0,64,8],[85,14,64,12,"action"],[85,20,64,18],[85,21,64,19,"type"],[85,25,64,12],[85,30,64,28,"DrawerActions"],[85,53,64,42,"DRAWER_CLOSED"],[85,66,64,8],[85,68,64,57],[86,0,65,10],[86,37,66,15,"state"],[86,42,65,10],[87,0,67,12,"isDrawerOpen"],[87,14,67,12,"isDrawerOpen"],[87,26,67,24],[87,28,67,26],[87,33,65,10],[88,0,68,12,"isDrawerIdle"],[88,14,68,12,"isDrawerIdle"],[88,26,68,24],[88,28,68,26],[88,32,65,10],[89,0,69,12,"drawerMovementDirection"],[89,14,69,12,"drawerMovementDirection"],[89,37,69,35],[89,39,69,37],[90,0,65,10],[91,0,71,9],[93,0,73,8],[93,14,73,12,"action"],[93,20,73,18],[93,21,73,19,"type"],[93,25,73,12],[93,30,73,28,"DrawerActions"],[93,53,73,42,"DRAWER_OPENED"],[93,66,73,8],[93,68,73,57],[94,0,74,10],[94,37,75,15,"state"],[94,42,74,10],[95,0,76,12,"isDrawerOpen"],[95,14,76,12,"isDrawerOpen"],[95,26,76,24],[95,28,76,26],[95,32,74,10],[96,0,77,12,"isDrawerIdle"],[96,14,77,12,"isDrawerIdle"],[96,26,77,24],[96,28,77,26],[96,32,74,10],[97,0,78,12,"drawerMovementDirection"],[97,14,78,12,"drawerMovementDirection"],[97,37,78,35],[97,39,78,37],[98,0,74,10],[99,0,80,9],[101,0,82,8],[101,14,82,12,"action"],[101,20,82,18],[101,21,82,19,"type"],[101,25,82,12],[101,30,82,28,"DrawerActions"],[101,53,82,42,"CLOSE_DRAWER"],[101,65,82,8],[101,67,82,56],[102,0,83,10],[102,37,84,15,"state"],[102,42,83,10],[103,0,85,12,"closeId"],[103,14,85,12,"closeId"],[103,21,85,19],[103,23,85,21,"genId"],[103,28,85,26],[104,0,83,10],[105,0,87,9],[107,0,89,8],[107,14,89,12,"action"],[107,20,89,18],[107,21,89,19,"type"],[107,25,89,12],[107,30,89,28,"DrawerActions"],[107,53,89,42,"MARK_DRAWER_SETTLING"],[107,73,89,8],[107,75,89,64],[108,0,90,10],[108,37,91,15,"state"],[108,42,90,10],[109,0,92,12,"isDrawerIdle"],[109,14,92,12,"isDrawerIdle"],[109,26,92,24],[109,28,92,26],[109,33,90,10],[110,0,93,12,"drawerMovementDirection"],[110,14,93,12,"drawerMovementDirection"],[110,37,93,35],[110,39,93,37,"action"],[110,45,93,43],[110,46,93,44,"willShow"],[110,54,93,37],[110,57,93,55],[110,66,93,37],[110,69,93,67],[111,0,90,10],[112,0,95,9],[114,0,97,8],[114,14,97,12,"action"],[114,20,97,18],[114,21,97,19,"type"],[114,25,97,12],[114,30,97,28,"DrawerActions"],[114,53,97,42,"MARK_DRAWER_ACTIVE"],[114,71,97,8],[114,73,97,62],[115,0,98,10],[115,37,99,15,"state"],[115,42,98,10],[116,0,100,12,"isDrawerIdle"],[116,14,100,12,"isDrawerIdle"],[116,26,100,24],[116,28,100,26],[116,33,98,10],[117,0,101,12,"drawerMovementDirection"],[117,14,101,12,"drawerMovementDirection"],[117,37,101,35],[117,39,101,37],[118,0,98,10],[119,0,103,9],[121,0,105,8],[121,14,105,12,"action"],[121,20,105,18],[121,21,105,19,"type"],[121,25,105,12],[121,30,105,28,"DrawerActions"],[121,53,105,42,"MARK_DRAWER_IDLE"],[121,69,105,8],[121,71,105,60],[122,0,106,10],[122,37,107,15,"state"],[122,42,106,10],[123,0,108,12,"isDrawerIdle"],[123,14,108,12,"isDrawerIdle"],[123,26,108,24],[123,28,108,26],[123,32,106,10],[124,0,109,12,"drawerMovementDirection"],[124,14,109,12,"drawerMovementDirection"],[124,37,109,35],[124,39,109,37],[125,0,106,10],[126,0,111,9],[128,0,113,8],[128,14,113,12,"action"],[128,20,113,18],[128,21,113,19,"type"],[128,25,113,12],[128,30,113,28,"NavigationActions"],[128,54,113,46,"BACK"],[128,58,113,12],[128,63,113,55,"state"],[128,68,113,60],[128,69,113,61,"isDrawerOpen"],[128,81,113,55],[128,85,113,77],[128,86,113,78,"state"],[128,91,113,83],[128,92,113,84,"isDrawerIdle"],[128,104,113,12],[128,109,113,101,"state"],[128,114,113,106],[128,115,113,107,"drawerMovementDirection"],[128,138,113,101],[128,143,113,135],[128,152,113,8],[128,154,113,146],[129,0,114,10],[129,37,115,15,"state"],[129,42,114,10],[130,0,116,12,"closeId"],[130,14,116,12,"closeId"],[130,21,116,19],[130,23,116,21,"genId"],[130,28,116,26],[131,0,114,10],[132,0,118,9],[134,0,120,8],[134,14,120,12,"action"],[134,20,120,18],[134,21,120,19,"type"],[134,25,120,12],[134,30,120,28,"DrawerActions"],[134,53,120,42,"OPEN_DRAWER"],[134,64,120,8],[134,66,120,55],[135,0,121,10],[135,37,122,15,"state"],[135,42,121,10],[136,0,123,12,"openId"],[136,14,123,12,"openId"],[136,20,123,18],[136,22,123,20,"genId"],[136,27,123,25],[137,0,121,10],[138,0,125,9],[140,0,127,8],[140,14,127,12,"action"],[140,20,127,18],[140,21,127,19,"type"],[140,25,127,12],[140,30,127,28,"DrawerActions"],[140,53,127,42,"TOGGLE_DRAWER"],[140,66,127,8],[140,68,127,57],[141,0,128,10],[141,37,129,15,"state"],[141,42,128,10],[142,0,130,12,"toggleId"],[142,14,130,12,"toggleId"],[142,22,130,20],[142,24,130,22,"genId"],[142,29,130,27],[143,0,128,10],[144,0,132,9],[145,0,133,7],[147,0,136,6],[147,12,136,12,"switchedState"],[147,25,136,25],[147,28,136,28,"switchRouter"],[147,40,136,40],[147,41,136,41,"getStateForAction"],[147,58,136,28],[147,59,136,59,"action"],[147,65,136,28],[147,67,136,67,"state"],[147,72,136,28],[147,73,136,6],[149,0,138,6],[149,12,138,10,"switchedState"],[149,25,138,23],[149,30,138,28],[149,34,138,6],[149,36,138,34],[150,0,140,8],[150,17,140,15],[150,21,140,8],[151,0,141,7],[153,0,144,6],[153,12,144,10,"switchedState"],[153,25,144,23],[153,30,144,28,"state"],[153,35,144,6],[153,37,144,35],[154,0,146,8],[154,14,146,12,"getActiveRouteKey"],[154,31,146,29],[154,32,146,30,"switchedState"],[154,45,146,29],[154,46,146,12],[154,51,146,49,"getActiveRouteKey"],[154,68,146,66],[154,69,146,67,"state"],[154,74,146,66],[154,75,146,12],[154,80,146,78,"state"],[154,85,146,83],[154,86,146,84,"isDrawerOpen"],[154,98,146,78],[154,102,146,100,"state"],[154,107,146,105],[154,108,146,106,"drawerMovementDirection"],[154,131,146,100],[154,136,146,134],[154,145,146,12],[154,146,146,8],[154,148,146,146],[155,0,147,10],[155,37,148,15,"switchedState"],[155,50,147,10],[156,0,149,12,"closeId"],[156,14,149,12,"closeId"],[156,21,149,19],[156,23,149,21,"genId"],[156,28,149,26],[157,0,147,10],[158,0,151,9],[160,0,156,8],[160,17,156,15,"switchedState"],[160,30,156,8],[161,0,157,7],[163,0,159,6],[163,15,159,13,"state"],[163,20,159,6],[164,0,160,5],[165,0,33,2],[166,0,162,1],[166,3]]},"type":"js/module"}]}